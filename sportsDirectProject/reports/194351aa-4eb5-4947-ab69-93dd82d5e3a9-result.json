{"name": "test_ItemsSearch", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"TotalValue\"]\"}\n  (Session info: chrome=102.0.5005.115)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00B1B8F3+2406643]\n\tOrdinal0 [0x00AAAF31+1945393]\n\tOrdinal0 [0x0099C748+837448]\n\tOrdinal0 [0x009C92E0+1020640]\n\tOrdinal0 [0x009C957B+1021307]\n\tOrdinal0 [0x009F6372+1205106]\n\tOrdinal0 [0x009E42C4+1131204]\n\tOrdinal0 [0x009F4682+1197698]\n\tOrdinal0 [0x009E4096+1130646]\n\tOrdinal0 [0x009BE636+976438]\n\tOrdinal0 [0x009BF546+980294]\n\tGetHandleVerifier [0x00D89612+2498066]\n\tGetHandleVerifier [0x00D7C920+2445600]\n\tGetHandleVerifier [0x00BB4F2A+579370]\n\tGetHandleVerifier [0x00BB3D36+574774]\n\tOrdinal0 [0x00AB1C0B+1973259]\n\tOrdinal0 [0x00AB6688+1992328]\n\tOrdinal0 [0x00AB6775+1992565]\n\tOrdinal0 [0x00ABF8D1+2029777]\n\tBaseThreadInitThunk [0x7635FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x76FA7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x76FA7A6E+238]", "trace": "self = <sportsDirectProject.test_sportsDirectTask.TestonAir object at 0x00000156C154D8E0>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_ItemsSearch(self):\n        # def test_Item1Search(self):\n        self.driver.find_element(By.ID, \"txtSearch\").send_keys(\"polos\")\n        self.driver.find_element(By.XPATH, \"//span[normalize-space()='Search']\").click()\n        self.driver.find_element(By.XPATH, \"//li[1]//div[1]//div[1]//div[1]//a[1]//div[1]//img[1]\").click()\n        self.driver.find_element(By.XPATH, \"//img[@alt='White/Navy']\").click()\n    \n        #item1 view options\n        click_next_1 = self.driver.find_element(By.XPATH, \"//a[@rel='next']//span\")\n        for i in range(0, 4):\n            click_next_1.click()\n            time.sleep(2)\n    \n        #item1 size and quantity selection\n        self.driver.find_element(By.XPATH, \"//div[@id='productVariantAndPrice']//li[1]//a[1]\").click()\n        self.driver.find_element(By.XPATH, \"//span[@class='prodadd']\").click()\n        self.driver.find_element(By.ID, \"aAddToBag\").click()\n        time.sleep(4)\n    \n        #item2 search (Nike Air Zoom Pegasus)\n        self.driver.find_element(By.ID, \"txtSearch\").send_keys(\"shoes\")\n        self.driver.find_element(By.XPATH, \"//span[normalize-space()='Search']\").click()\n        self.driver.find_element(By.XPATH, '//*[@id=\"navlist\"]/li[1]/div/div/div[1]/a[1]/div/img').click()\n        self.driver.find_element(By.XPATH, \"//img[@alt='Black/Crimson']\").click()\n    \n        #item2 view options\n        click_next_2 = self.driver.find_element(By.XPATH, \"//a[@rel='next']//span\")\n        for i in range(0, 4):\n            click_next_2.click()\n            time.sleep(2)\n    \n        #item2 size selection and add to bag\n        self.driver.find_element(By.XPATH, \"//span[normalize-space()='11.5 (47)']\").click()\n        self.driver.find_element(By.XPATH, \"//span[@class='prodadd']\").click()\n        self.driver.find_element(By.ID, \"aAddToBag\").click()\n        time.sleep(2)\n    \n        #items checkout\n        bags = self.driver.find_element(By.ID, \"bagQuantityContainer\")\n        action = ActionChains(self.driver)\n        action.move_to_element(bags).perform()\n        self.driver.find_element(By.XPATH, \"//a[@id='aCheckout']//span[contains(text(),'Checkout')]\").click()\n    \n        #customer account login\n        self.driver.find_element(By.ID, \"Login_EmailAddress\").send_keys(\"testing001@gmail.com\")\n        self.driver.find_element(By.ID, \"Login_Password\").send_keys(\"Testing070\")\n        self.driver.find_element(By.ID, \"LoginButton\").click()\n    \n        #Delivery options\n        first_name = self.driver.find_element(By.ID, \"NewAddressSelection_Address_FirstName\")\n        first_name.clear()\n        first_name.send_keys(\"test\")\n        last_name = self.driver.find_element(By.ID, \"NewAddressSelection_Address_Surname\")\n        last_name.clear()\n        last_name.send_keys(\"testing\")\n        adres_1 = self.driver.find_element(By.ID, \"NewAddressSelection_Address_Line1\")\n        adres_1.clear()\n        adres_1.send_keys(\"Abulas iela 2 LV1026 Riga\")\n        addres_2 = self.driver.find_element(By.ID, \"NewAddressSelection_Address_Line2\")\n        addres_2.clear()\n        addres_2.send_keys(\"Abulas iela 2 LV1026 Riga\")\n        city = self.driver.find_element(By.ID, \"NewAddressSelection_Address_Town\")\n        city.clear()\n        city.send_keys(\"Riga\")\n        country = self.driver.find_element(By.ID, \"NewAddressSelection_Address_RegionName\")\n        country.clear()\n        country.send_keys(\"Latvia\")\n        postcode = self.driver.find_element(By.ID, \"NewAddressSelection_Address_Postcode\")\n        postcode.clear()\n        postcode.send_keys(\"1000\")\n        phone = self.driver.find_element(By.ID, \"TelephoneNumber\")\n        phone.clear()\n        phone.send_keys(\"+3710000000\")\n        self.driver.find_element(By.XPATH, '//*[@id=\"main-content\"]/div/div/div/div[2]/div[4]/div[2]/input').click()\n>       total_sum = self.driver.find_element(By.ID, \"TotalValue\")\n\nsportsDirectProject\\test_sportsDirectTask.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:857: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000156C154DC40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FA7A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76FA7A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"TotalValue\"]\"}\nE         (Session info: chrome=102.0.5005.115)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00B1B8F3+2406643]\nE       \tOrdinal0 [0x00AAAF31+1945393]\nE       \tOrdinal0 [0x0099C748+837448]\nE       \tOrdinal0 [0x009C92E0+1020640]\nE       \tOrdinal0 [0x009C957B+1021307]\nE       \tOrdinal0 [0x009F6372+1205106]\nE       \tOrdinal0 [0x009E42C4+1131204]\nE       \tOrdinal0 [0x009F4682+1197698]\nE       \tOrdinal0 [0x009E4096+1130646]\nE       \tOrdinal0 [0x009BE636+976438]\nE       \tOrdinal0 [0x009BF546+980294]\nE       \tGetHandleVerifier [0x00D89612+2498066]\nE       \tGetHandleVerifier [0x00D7C920+2445600]\nE       \tGetHandleVerifier [0x00BB4F2A+579370]\nE       \tGetHandleVerifier [0x00BB3D36+574774]\nE       \tOrdinal0 [0x00AB1C0B+1973259]\nE       \tOrdinal0 [0x00AB6688+1992328]\nE       \tOrdinal0 [0x00AB6775+1992565]\nE       \tOrdinal0 [0x00ABF8D1+2029777]\nE       \tBaseThreadInitThunk [0x7635FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FA7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76FA7A6E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException"}, "start": 1656904159973, "stop": 1656904326347, "uuid": "e41d1b4e-1f48-4337-a072-fd07b7fce388", "historyId": "57e4a5f801655dccb2de722dad507b33", "testCaseId": "4bdbb97faa92985a70111a6507c71fda", "fullName": "sportsDirectProject.test_sportsDirectTask.TestonAir#test_ItemsSearch", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "sportsDirectProject"}, {"name": "suite", "value": "test_sportsDirectTask"}, {"name": "subSuite", "value": "TestonAir"}, {"name": "host", "value": "Ben"}, {"name": "thread", "value": "23416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "sportsDirectProject.test_sportsDirectTask"}]}